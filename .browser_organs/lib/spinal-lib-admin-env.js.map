{
  "version": 3,
  "sources": [
    "../browser-pack/_prelude.js",
    "../spinal-core-connectorjs_type/dist/SpinalModel.js",
    "../spinal-core-connectorjs_type/dist/connectorTS.js",
    "../spinal-env-admin-access-rights-manager/dist/Models/AppProfile.js",
    "../spinal-env-admin-access-rights-manager/dist/Models/AppProfileLst.js",
    "../spinal-env-admin-access-rights-manager/dist/Models/Role.js",
    "../spinal-env-admin-access-rights-manager/dist/Models/RoleLst.js",
    "../spinal-env-admin-access-rights-manager/dist/Models/UserProfile.js",
    "../spinal-env-admin-access-rights-manager/dist/SpinalAccesRightsService.js",
    "../spinal-env-admin-access-rights-manager/dist/index.js",
    "../spinal-env-admin-access-rights-manager/dist/loadModelPtr.js",
    "../spinal-env-admin-panel-hub-status/ServerStatusCtrl.js",
    "../spinal-env-admin-panel-hub-status/SpinalServerStatusService.js",
    "../spinal-env-admin-panel-hub-status/main.js",
    "../spinal-env-admin-panel-user-manager/main.js",
    "../spinal-env-drive-core/core/SpinalDrive_App.js",
    "../spinal-env-drive-core/core/SpinalDrive_App_list.js",
    "../spinal-env-drive-core/core/SpinalDrive_Env.js",
    "../spinal-env-drive-core/index.js",
    "../spinal-env-drive-plugin-base/base/SpinalDrive_App_delete.js",
    "../spinal-env-drive-plugin-base/base/SpinalDrive_App_download.js",
    "../spinal-env-drive-plugin-base/base/SpinalDrive_App_edit.js",
    "../spinal-env-drive-plugin-base/base/SpinalDrive_App_newFolder.js",
    "../spinal-env-drive-plugin-base/base/SpinalDrive_App_renameFile.js",
    "../spinal-env-drive-plugin-base/base/SpinalDrive_App_share.js",
    "../spinal-env-drive-plugin-base/index.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",
    "\"use strict\";\n/*\n * Copyright 2018 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"./connectorTS\");\nconst spinalCore = require(\"spinal-core-connectorjs\");\nexports.spinalCore = spinalCore;\n/// <reference types=\"typescript\" />\n/* tslint:disable:variable-name  class-name */\nconst Model = spinalCore._def.Model;\nexports.Model = Model;\nconst Str = spinalCore._def.Str;\nexports.Str = Str;\nconst Bool = spinalCore._def.Bool;\nexports.Bool = Bool;\nconst Val = spinalCore._def.Val;\nexports.Val = Val;\nconst Lst = spinalCore._def.Lst;\nexports.Lst = Lst;\nconst Directory = spinalCore._def.Directory;\nexports.Directory = Directory;\nconst Vec = spinalCore._def.Vec;\nexports.Vec = Vec;\nconst Path = spinalCore._def.Path;\nexports.Path = Path;\nconst File = spinalCore._def.File;\nexports.File = File;\nconst Ptr = spinalCore._def.Ptr;\nexports.Ptr = Ptr;\nconst Choice = spinalCore._def.Choice;\nexports.Choice = Choice;\nconst TypedArray = spinalCore._def.TypedArray;\nexports.TypedArray = TypedArray;\nconst TypedArray_Int32 = spinalCore._def.TypedArray_Int32;\nexports.TypedArray_Int32 = TypedArray_Int32;\nconst TypedArray_Float64 = spinalCore._def.TypedArray_Float64;\nexports.TypedArray_Float64 = TypedArray_Float64;\nconst Process = spinalCore._def.Process;\nexports.Process = Process;\nconst BindProcess = spinalCore._def.BindProcess;\nexports.BindProcess = BindProcess;\nconst globalAny = typeof window === 'undefined' ? global : window;\nconst FileSystem = globalAny.FileSystem;\nexports.FileSystem = FileSystem;\nconst Pbr = spinalCore._def.Pbr;\nexports.Pbr = Pbr;\nexports.default = spinalCore;\n//# sourceMappingURL=SpinalModel.js.map",
    "\"use strict\";\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbm5lY3RvclRTLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiIiLCJmaWxlIjoiL21udC9jL1VzZXJzL3doaXRlL0RvY3VtZW50cy9kZXYvVGVycmFzc3luL2NsZWFuL25vZGVfbW9kdWxlcy9zcGluYWwtY29yZS1jb25uZWN0b3Jqc190eXBlL2Rpc3QvY29ubmVjdG9yVFMuanMiLCJzb3VyY2VzQ29udGVudCI6W119",
    "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst spinal_core_connectorjs_type_1 = require(\"spinal-core-connectorjs_type\");\nclass AppProfile extends spinal_core_connectorjs_type_1.Model {\n    constructor(id, description) {\n        super();\n        this.add_attr({\n            id: id,\n            description: description,\n        });\n    }\n}\nexports.AppProfile = AppProfile;\nspinal_core_connectorjs_type_1.spinalCore.register_models(AppProfile);\n//# sourceMappingURL=AppProfile.js.map",
    "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst spinal_core_connectorjs_type_1 = require(\"spinal-core-connectorjs_type\");\nclass AppProfileLst extends spinal_core_connectorjs_type_1.Model {\n    constructor() {\n        super();\n        this.add_attr({\n            apps: new spinal_core_connectorjs_type_1.Lst()\n        });\n    }\n}\nexports.AppProfileLst = AppProfileLst;\nspinal_core_connectorjs_type_1.spinalCore.register_models(AppProfileLst);\n//# sourceMappingURL=AppProfileLst.js.map",
    "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst spinal_core_connectorjs_type_1 = require(\"spinal-core-connectorjs_type\");\nclass Role extends spinal_core_connectorjs_type_1.Model {\n    constructor(id, name, description) {\n        super();\n        this.add_attr({\n            id: id,\n            name: name,\n            description: description\n        });\n    }\n}\nexports.Role = Role;\nspinal_core_connectorjs_type_1.spinalCore.register_models(Role);\n//# sourceMappingURL=Role.js.map",
    "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst spinal_core_connectorjs_type_1 = require(\"spinal-core-connectorjs_type\");\nclass RoleLst extends spinal_core_connectorjs_type_1.Model {\n    constructor() {\n        super();\n        this.add_attr({\n            users: new spinal_core_connectorjs_type_1.Lst()\n        });\n    }\n}\nexports.RoleLst = RoleLst;\nspinal_core_connectorjs_type_1.spinalCore.register_models(RoleLst);\n//# sourceMappingURL=RoleLst.js.map",
    "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst spinal_core_connectorjs_type_1 = require(\"spinal-core-connectorjs_type\");\nclass UserProfile extends spinal_core_connectorjs_type_1.Model {\n    constructor(appProfiles = []) {\n        super();\n        this.add_attr({\n            appProfiles: appProfiles\n        });\n    }\n}\nexports.UserProfile = UserProfile;\nspinal_core_connectorjs_type_1.spinalCore.register_models(UserProfile);\n//# sourceMappingURL=UserProfile.js.map",
    "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst RoleLst_1 = require(\"./Models/RoleLst\");\nconst Role_1 = require(\"./Models/Role\");\nconst UserProfile_1 = require(\"./Models/UserProfile\");\nconst AppProfileLst_1 = require(\"./Models/AppProfileLst\");\nconst AppProfile_1 = require(\"./Models/AppProfile\");\nconst spinal_core_connectorjs_type_1 = require(\"spinal-core-connectorjs_type\");\nconst loadModelPtr_1 = require(\"./loadModelPtr\");\nconst CONFIG_PATH = \"/etc/config/\";\nconst USERS_FILE_PATH = \"/etc/users\";\nconst USERS_PROFILE_DIR_NAME = \"UserProfileDir\";\nconst ROLE_LST_PATH = CONFIG_PATH + \"UserProfileLst\";\nconst APP_PROFILE_LST_PATH = CONFIG_PATH + \"AppProfileLst\";\nconst ADMIN_NAME = 'Admin';\nconst ADMIN_DESCRIPTION = 'Administrator of the spinal platform';\nconst INTEGRATOR_NAME = 'Intégrateur';\nconst INTEGRATOR_DESCRIPTION = 'Intégrateur description';\nconst MAINTAINER_NAME = \"Mainteneur\";\nconst MAINTAINER_DESCRIPTION = 'Mainteneur description';\nconst ASSET_MANAGER_NAME = 'Asset Manager';\nconst DEFAULT_USER_NAME = 'Basic Utilisateur';\nconst DEFAULT_USER_DESCRIPTION = 'Defaut utilisateur description';\nconst USERS_DIR = '__users__';\nconst PUBLIC_DIR = 'public';\nconst PUBLIC_DIR_PATH = `${USERS_DIR}/${PUBLIC_DIR}`;\nconst USERS = [\n    { name: ADMIN_NAME, description: ADMIN_DESCRIPTION },\n    { name: INTEGRATOR_NAME, description: INTEGRATOR_DESCRIPTION },\n    { name: MAINTAINER_NAME, description: MAINTAINER_DESCRIPTION },\n    { name: ASSET_MANAGER_NAME, description: ASSET_MANAGER_NAME },\n    { name: DEFAULT_USER_NAME, description: DEFAULT_USER_DESCRIPTION }\n];\nclass SpinalAdminInit {\n    static wait() {\n        return new Promise((resolve) => {\n            setTimeout(() => {\n                resolve();\n            }, 1000);\n        });\n    }\n    static init(authService, ngSpinalCore) {\n        return authService\n            .wait_connect()\n            .then(SpinalAdminInit.wait)\n            .then(() => {\n            return SpinalAdminInit.initRoleLst(ngSpinalCore)\n                .then(SpinalAdminInit.initAppProfileLst.bind(this, ngSpinalCore))\n                .then(SpinalAdminInit.initDefaultUser.bind(this, ngSpinalCore))\n                .then(SpinalAdminInit.initPublicDir.bind(this, ngSpinalCore));\n        });\n    }\n    ;\n    static initRoleLst(ngSpinalCore) {\n        return ngSpinalCore.load(ROLE_LST_PATH)\n            .then(SpinalAdminInit.onRoleLstLoadSuccessful)\n            .catch(SpinalAdminInit.onRoleLstLoadFail.bind(this, ngSpinalCore));\n    }\n    static initAppProfileLst(ngSpinalCore) {\n        return ngSpinalCore.load(APP_PROFILE_LST_PATH)\n            .then(SpinalAdminInit.onAppProfileLstLoadSuccessful)\n            .catch(SpinalAdminInit.onAppProfileLstLoadFail.bind(this, ngSpinalCore));\n    }\n    static initPublicDir(ngSpinalCore) {\n        return ngSpinalCore.load(USERS_DIR)\n            .then(SpinalAdminInit.onInitPublicDir);\n    }\n    static getFileTargetServerId(file) {\n        const ptr = file._ptr;\n        if (ptr.data.value)\n            return ptr.data.value;\n        return ptr.data.model._server_id;\n    }\n    static getOrCreatePublicDir(userDir) {\n        const file = userDir.detect((x) => x.name.get() === PUBLIC_DIR);\n        if (!file) {\n            // file doesn't exist\n            const dir = new spinal_core_connectorjs_type_1.Directory();\n            userDir.add_file(PUBLIC_DIR, dir);\n            return Promise.resolve(dir);\n        }\n        return loadModelPtr_1.loadModelPtr(file);\n    }\n    static onInitPublicDir(userDir) {\n        return SpinalAdminInit.getOrCreatePublicDir(userDir).then((publicDir) => {\n            for (let i = 0; i < userDir.length; i++) {\n                if (userDir[i].name.get() !== PUBLIC_DIR &&\n                    userDir[i]._info &&\n                    !userDir[i]._info.publicDir) {\n                    userDir[i]._info.add_attr('publicDir', new spinal_core_connectorjs_type_1.Ptr(publicDir));\n                }\n            }\n        });\n    }\n    static onRoleLstLoadSuccessful() {\n        return Promise.resolve();\n    }\n    static onRoleLstLoadFail(ngSpinalCore) {\n        const userProfileLst = new RoleLst_1.RoleLst();\n        for (let i = 0; i < USERS.length; i++) {\n            const user = USERS[i];\n            //start id = 1\n            userProfileLst.users.push(new Role_1.Role(i, user.name, user.description));\n        }\n        return ngSpinalCore.store(userProfileLst, ROLE_LST_PATH)\n            .then(SpinalAdminInit.onRoleLstLoadSuccessful)\n            .catch(() => {\n            console.log('store rejection from onUserProfileLstLoadFail');\n            return Promise.resolve();\n        });\n    }\n    static onAppProfileLstLoadSuccessful() {\n        return Promise.resolve();\n    }\n    static onAppProfileLstLoadFail(ngSpinalCore) {\n        const appProfileLst = new AppProfileLst_1.AppProfileLst();\n        for (let i = 0; i < 32; i++) {\n            appProfileLst.apps\n                .push(new AppProfile_1.AppProfile(i + 1, 'id des profile utilisateur en binair inverser'));\n        }\n        return ngSpinalCore.store(appProfileLst, APP_PROFILE_LST_PATH)\n            .then(SpinalAdminInit.onAppProfileLstLoadSuccessful)\n            .catch(() => {\n            console.log('store rejection from onAppProfileLstLoadFail');\n            return Promise.resolve();\n        });\n    }\n    static getUserProfileDir(ngSpinalCore) {\n        return ngSpinalCore.load('/etc')\n            .then(etcDir => {\n            for (let i = 0; i < etcDir.length; i++) {\n                const file = etcDir[i];\n                if (file.name === USERS_PROFILE_DIR_NAME)\n                    return file;\n            }\n            const Dir = new spinal_core_connectorjs_type_1.Directory();\n            etcDir.add_file(USERS_PROFILE_DIR_NAME, Dir);\n            return Dir;\n        });\n    }\n    static initDefaultUser(ngSpinalCore) {\n        return SpinalAdminInit.getUserProfileDir(ngSpinalCore)\n            .then((dir) => {\n            return ngSpinalCore.load(USERS_FILE_PATH)\n                .then((users) => {\n                const promises = [];\n                for (let i = 0; i < users.length; i++) {\n                    const user = users[i];\n                    if (!dir.has(user.name)) {\n                        //4 is the id of default user role. 0 is admin role\n                        const type = (user.type == 0) ? 0 : 4;\n                        const userProfile = new UserProfile_1.UserProfile([type]);\n                        dir.add_file(user.name, userProfile);\n                    }\n                }\n            });\n        });\n    }\n}\nexports.SpinalAdminInit = SpinalAdminInit;\n//# sourceMappingURL=SpinalAccesRightsService.js.map",
    "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"spinal-env-drive-core\");\nconst SpinalAccesRightsService_1 = require(\"./SpinalAccesRightsService\");\nconst angular = require(\"angular\");\n// const interval = setInterval(() => {\n//   if (angular.element(\"body > div\").injector()) {\n//     const authService = angular\n//       .element(\"body > div\")\n//       .injector()\n//       .get(\"authService\");\n//     const ngSpinalCore = angular\n//       .element(\"body > div\")\n//       .injector()\n//       .get(\"ngSpinalCore\");\n//     SpinalAdminInit.init(authService, ngSpinalCore).then(\n//       () => {\n//         clearInterval(interval);\n//       },\n//       () => {\n//       }\n//     );\n//   }\n// }, 2000);\nangular\n    .module('app.services')\n    .run([\n    'authService', 'ngSpinalCore',\n    function (authService, ngSpinalCore) {\n        SpinalAccesRightsService_1.SpinalAdminInit.init(authService, ngSpinalCore);\n    }\n]);\n//# sourceMappingURL=index.js.map",
    "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst spinal_core_connectorjs_type_1 = require(\"spinal-core-connectorjs_type\");\nconst mapModelDictionary = new Map();\nfunction loadModelPtr(model) {\n    if (model instanceof spinal_core_connectorjs_type_1.File) {\n        return loadModelPtr(model._ptr);\n    }\n    if (!(model instanceof spinal_core_connectorjs_type_1.Ptr)) {\n        throw new Error('loadModelPtr must take Ptr as parameter');\n    }\n    if (!model.data.value && model.data.model) {\n        return Promise.resolve(model.data.model);\n    }\n    else if (!model.data.value) {\n        throw new Error('Trying to load a Ptr to 0');\n    }\n    if (mapModelDictionary.has(model.data.value)) {\n        return mapModelDictionary.get(model.data.value);\n    }\n    if (typeof spinal_core_connectorjs_type_1.FileSystem._objects[model.data.value] !== 'undefined') {\n        const promise = Promise.resolve(spinal_core_connectorjs_type_1.FileSystem._objects[model.data.value]);\n        mapModelDictionary.set(model.data.value, promise);\n        return promise;\n    }\n    const promise = new Promise((resolve, reject) => {\n        model.load(m => {\n            if (!m) {\n                mapModelDictionary.delete(model.data.value);\n                reject(new Error('Error in load Ptr'));\n            }\n            else {\n                resolve(m);\n            }\n        });\n    });\n    mapModelDictionary.set(model.data.value, promise);\n    return promise;\n}\nexports.loadModelPtr = loadModelPtr;\nexports.default = loadModelPtr;\n//# sourceMappingURL=loadModelPtr.js.map",
    "(function() {\n  var angular = require(\"angular\");\n  var d3 = require(\"d3\");\n  angular.module(\"app.spinal-panel\").controller(\"ServerStatusCtrl\", [\n    \"$scope\",\n    \"$injector\",\n    \"$mdToast\",\n    \"$interval\",\n    \"$timeout\",\n    \"$mdDialog\",\n    \"$q\",\n    \"SpinalServerStatusService\",\n    \"layout_uid\",\n    function(\n      $scope,\n      $injector,\n      $mdToast,\n      $interval,\n      $timeout,\n      $mdDialog,\n      $q,\n      SpinalServerStatusService,\n      layout_uid\n    ) {\n      $scope.injector = $injector;\n      $scope.users = [];\n      $scope.uid = layout_uid.get();\n      $scope.statusLst = [];\n      var width;\n      var lastGraph = null;\n      $scope.statusModel = null;\n\n      $scope.backupClick = () => {\n        $scope.statusModel.btn.backup.set(1);\n      };\n      $scope.garbageCollectorClick = () => {\n        $scope.statusModel.btn.garbageCollector.set(1);\n      };\n      $scope.isBackupDisabled = () => {\n        if ($scope.statusModel && $scope.statusModel.btn.backup.get() === 0) {\n          return false;\n        }\n        return true;\n      };\n      $scope.isGrbageCollectorDisabled = () => {\n        if (\n          $scope.statusModel &&\n          $scope.statusModel.btn.garbageCollector.get() === 0\n        ) {\n          return false;\n        }\n        return true;\n      };\n\n      function getStatus(name) {\n        for (var i = 0; i < $scope.statusLst.length; i++) {\n          if ($scope.statusLst[i].name === name) return $scope.statusLst[i];\n        }\n        return null;\n      }\n\n      function updateData(status, data) {\n        data.forEach(function(value, index) {\n          data[index] = parseInt(data[index]);\n        });\n        for (var i = 0; i < data.length; i++) {\n          if (isNaN(data[i])) {\n            data.splice(i, 1);\n            i -= 1;\n          }\n        }\n        let elem = d3.select(\"#\" + status.id);\n        elem.select(\"svg\").remove();\n        let graph = elem\n          .append(\"svg\")\n          .attr(\"width\", \"100%\")\n          .attr(\"height\", \"50px\");\n        lastGraph = graph;\n        var height = parseInt(graph.style(\"height\"));\n        width = parseInt(graph.style(\"width\"));\n        var x = d3\n          .scaleLinear()\n          .domain([0, data.length])\n          .range([0, width]);\n        var ymax = d3.max(data);\n        var y = d3\n          .scaleLinear()\n          .domain([0, ymax])\n          .range([height, 0]);\n        var line = d3\n          .line()\n          .x(function(d, i) {\n            return x(i);\n          })\n          .y(function(d) {\n            return y(d);\n          });\n        graph\n          .append(\"path\")\n          .data([data])\n          .attr(\"class\", \"line\")\n          .attr(\"d\", line);\n        var mouseG = graph.append(\"g\").attr(\"class\", \"mouse-over-effects\");\n\n        mouseG\n          .append(\"path\") // this is the black vertical line to follow mouse\n          .attr(\"class\", \"mouse-line\")\n          .style(\"stroke\", \"#96ceff\")\n          .style(\"stroke-width\", \"1px\")\n          .style(\"opacity\", \"0\");\n\n        var mousePerLine = mouseG\n          .selectAll(\".mouse-per-line\")\n          .data([1])\n          .enter()\n          .append(\"g\")\n          .attr(\"class\", \"mouse-per-line\");\n\n        mousePerLine\n          .append(\"circle\")\n          .attr(\"r\", 5)\n          .style(\"stroke\", \"#96ceff\")\n          .style(\"fill\", \"none\")\n          .style(\"stroke-width\", \"1px\")\n          .style(\"opacity\", \"0\");\n\n        var textgroup = mousePerLine\n          .append(\"g\")\n          .attr(\"transform\", \"translate(-3,17)\")\n          .style(\"opacity\", \"0\");\n        textgroup.append(\"rect\").attr(\"fill\", \"#96ceff\");\n\n        textgroup.append(\"text\").attr(\"text-anchor\", \"end\");\n\n        mouseG\n          .append(\"svg:rect\") // append a rect to catch mouse movements on canvas\n          .attr(\"width\", width) // can't catch mouse events on a g element\n          .attr(\"height\", height)\n          .attr(\"fill\", \"none\")\n          .attr(\"pointer-events\", \"all\")\n          .on(\"mouseout\", function() {\n            // on mouse out hide line, circles and text\n            mouseG.select(\".mouse-line\").style(\"opacity\", \"0\");\n            mousePerLine.select(\".mouse-per-line circle\").style(\"opacity\", \"0\");\n            mousePerLine.select(\".mouse-per-line g\").style(\"opacity\", \"0\");\n          })\n          .on(\"mouseover\", function() {\n            // on mouse in show line, circles and text\n            mouseG.select(\".mouse-line\").style(\"opacity\", \"1\");\n            mousePerLine.select(\".mouse-per-line circle\").style(\"opacity\", \"1\");\n            mousePerLine.select(\".mouse-per-line g\").style(\"opacity\", \"1\");\n          })\n          .on(\"mousemove\", function() {\n            // mouse moving over canvas\n            var mouse = d3.mouse(this);\n            mouseG.select(\".mouse-line\").attr(\"d\", function() {\n              let _x = Math.floor(x.invert(mouse[0]));\n              let __x = Math.floor(x(_x));\n              var d = \"M\" + __x + \",\" + height;\n              d += \" \" + __x + \",\" + 0;\n              return d;\n            });\n            mouseG.selectAll(\".mouse-per-line\").attr(\"transform\", function() {\n              let _x = Math.floor(x.invert(mouse[0]));\n              let real_x = Math.floor(x(_x));\n              let _y = data[_x];\n              let real_y = y(_y);\n              let text = d3.select(this).select(\"text\");\n              let grp = d3.select(this).select(\"g\");\n              if (_y < ymax / 2) {\n                grp.attr(\"transform\", \"translate(-3,-17)\");\n              } else grp.attr(\"transform\", \"translate(-3,25)\");\n              let rect = d3.select(this).select(\"rect\");\n              text.text(_y.toFixed(0));\n              let bbox = text.node().getBBox();\n              var padding = 2;\n              rect\n                .attr(\"x\", bbox.x - padding)\n                .attr(\"y\", bbox.y - padding)\n                .attr(\"width\", bbox.width + padding * 2)\n                .attr(\"height\", bbox.height + padding * 2);\n              return \"translate(\" + real_x + \",\" + real_y + \")\";\n            });\n          });\n      }\n\n      function wait_DOM_RDY_rec(defer, status) {\n        let elem = d3.select(\"#\" + status.id);\n        if (!elem._groups[0][0])\n          setTimeout(() => {\n            wait_DOM_RDY_rec(defer, status);\n          }, 200);\n        else defer.resolve(elem);\n      }\n\n      function wait_DOM_RDY(status) {\n        let defer = $q.defer();\n        wait_DOM_RDY_rec(defer, status);\n        return defer.promise;\n      }\n\n      function update_or_push_Status(name, value, data) {\n        let status = getStatus(name);\n        if (status) {\n          status.value = value;\n        } else {\n          status = {\n            name: name,\n            value: value,\n            id: \"spark_\" + name + \"_\" + $scope.uid\n          };\n          $scope.statusLst.push(status);\n        }\n        wait_DOM_RDY(status).then(function() {\n          updateData(status, data);\n        });\n      }\n\n      function draw() {\n        update_or_push_Status(\n          \"count_models\",\n          $scope.statusModel.count_models.get(),\n          $scope.statusModel.data.count_models.get().split(\";\")\n        );\n        update_or_push_Status(\n          \"count_sessions\",\n          $scope.statusModel.count_sessions.get(),\n          $scope.statusModel.data.count_sessions.get().split(\";\")\n        );\n        update_or_push_Status(\n          \"count_users\",\n          $scope.statusModel.count_users.get(),\n          $scope.statusModel.data.count_users.get().split(\";\")\n        );\n        update_or_push_Status(\n          \"ram_usage_res\",\n          $scope.statusModel.ram_usage_res.get(),\n          $scope.statusModel.data.ram_usage_res.get().split(\";\")\n        );\n        update_or_push_Status(\n          \"ram_usage_virt\",\n          $scope.statusModel.ram_usage_virt.get(),\n          $scope.statusModel.data.ram_usage_virt.get().split(\";\")\n        );\n      }\n\n      SpinalServerStatusService.init().then(function(statusModel) {\n        $scope.statusModel = statusModel;\n        draw();\n        let check_redraw = () => {\n          let graphWidth = parseInt(lastGraph.style(\"width\"));\n          if (width != graphWidth) {\n            width = graphWidth;\n            draw();\n          }\n        };\n        $scope.statusModel.bind(draw);\n        let interval_resize = setInterval(check_redraw, 600);\n        $scope.$on(\"$destroy\", function() {\n          clearInterval(interval_resize);\n          $scope.statusModel.unbind(draw);\n          interval_resize = undefined;\n        });\n      });\n    }\n  ]);\n})();\n",
    "var angular = require(\"angular\");\n\nangular.module(\"app.spinal-panel\").factory(\"SpinalServerStatusService\", [\n  \"authService\",\n  \"$q\",\n  \"ngSpinalCore\",\n  function(authService, $q, ngSpinalCore) {\n    let spinhubService = {};\n\n    spinhubService.init = () => {\n      if (!spinhubService.statusModel) {\n        return authService.wait_connect().then(\n          () => {\n            return ngSpinalCore.load(\"/etc/Status\").then(function(statusModel) {\n              spinhubService.statusModel = statusModel;\n              return spinhubService.statusModel;\n            });\n          },\n          () => {\n            let msg = \"not able to load : /etc/Status\";\n            console.error(msg);\n            deferred.reject(msg);\n          }\n        );\n      } else {\n        var deferred = $q.defer();\n        deferred.resolve(spinhubService.statusModel);\n        return deferred.promise;\n      }\n    };\n\n    return spinhubService;\n  }\n]);\n",
    "require(\"./SpinalServerStatusService\");\nrequire(\"./ServerStatusCtrl\");\nvar angular = require(\"angular\");\n\n(function() {\n  angular.module(\"app.spinal-panel\").run([\n    \"$templateCache\",\n    \"$http\",\n    \"goldenLayoutService\",\n    function($templateCache, $http, goldenLayoutService) {\n      let load_template = (uri, name) => {\n        $http.get(uri).then(\n          response => {\n            $templateCache.put(name, response.data);\n          },\n          () => {\n            console.log(\"Cannot load the file \" + uri);\n          }\n        );\n      };\n      let toload = [\n        {\n          uri:\n            \"../templates/spinal-env-admin-panel-hub-status/hub-status-panel.html\",\n          name: \"hub-status-panel.html\"\n        }\n      ];\n      for (var i = 0; i < toload.length; i++) {\n        load_template(toload[i].uri, toload[i].name);\n      }\n\n      goldenLayoutService.registerPanel({\n        id: \"drag-hub-status-panel\",\n        name: \"SpinalHub Status\",\n        cfg: {\n          isClosable: true,\n          title: \"SpinalHub Status\",\n          type: \"component\",\n          width: 20,\n          componentName: \"SpinalHome\",\n          componentState: {\n            template: \"hub-status-panel.html\",\n            module: \"app.spinal-panel\",\n            controller: \"ServerStatusCtrl\"\n          }\n        }\n      });\n    }\n  ]);\n})();\n",
    "// require(\"./SpinalUserManagerService\");\n// require(\"./UserManagerCtrl\");\n(function() {\n  window.angular.module(\"app.spinal-panel\").controller(\"userManagerPanelIframeCtrl\",\n    [\n      function() {}\n    ]);\n\n\n  window.angular.module(\"app.spinal-panel\").run([\n    \"$templateCache\",\n    \"$http\",\n    \"goldenLayoutService\",\n    function($templateCache, $http, goldenLayoutService) {\n      let load_template = (uri, name) => {\n        $http.get(uri).then(\n          response => {\n            $templateCache.put(name, response.data);\n          },\n          () => {\n            console.log(\"Cannot load the file \" + uri);\n          }\n        );\n      };\n      let toload = [{\n        uri: \"../templates/spinal-env-admin-panel-user-manager/user-manager-panel-iframe.html\",\n        name: \"user-manager-panel-iframe.html\"\n      }\n        // {\n        //   uri:\n        //     \"../templates/spinal-env-admin-panel-user-manager/user-manager-panel.html\",\n        //   name: \"user-manager-panel.html\"\n        // },\n        // {\n        //   uri:\n        //     \"../templates/spinal-env-admin-panel-user-manager/user-manager-create-user.html\",\n        //   name: \"user-manager-create-user.html\"\n        // },\n        // {\n        //   uri:\n        //     \"../templates/spinal-env-admin-panel-user-manager/user-manager-edit.html\",\n        //   name: \"user-manager-edit.html\"\n        // }\n      ];\n      for (var i = 0; i < toload.length; i++) {\n        load_template(toload[i].uri, toload[i].name);\n      }\n\n      goldenLayoutService.registerPanel({\n        id: \"drag-users-list-panel\",\n        name: \"User Manager\",\n        cfg: {\n          isClosable: true,\n          title: \"User Manager\",\n          type: \"component\",\n          width: 20,\n          componentName: \"SpinalHome\",\n          componentState: {\n            template: \"user-manager-panel-iframe.html\",\n            module: \"app.spinal-panel\",\n            controller: \"userManagerPanelIframeCtrl\"\n          }\n        }\n      });\n\n      // goldenLayoutService.registerPanel({\n      //   id: \"drag-users-list-panel\",\n      //   name: \"Users List\",\n      //   cfg: {\n      //     isClosable: true,\n      //     title: \"Users List\",\n      //     type: \"component\",\n      //     width: 20,\n      //     componentName: \"SpinalHome\",\n      //     componentState: {\n      //       template: \"user-manager-panel.html\",\n      //       module: \"app.spinal-panel\",\n      //       controller: \"UserManagerCtrl\"\n      //     }\n      //   }\n      // });\n    }\n  ]);\n})();\n",
    "require(\"spinal-core-connectorjs\");\n\n/**\n * interface on an app\n */\nclass SpinalDrive_App {\n  /**\n   * Creates an instance of SpinalDrive_App.\n   * @param {string} [name]\n   * @param {string} [label]\n   * @param {number} [id]\n   * @param {string} [icon]\n   * @param {string} [description]\n   * @memberof SpinalDrive_App\n   */\n  constructor(name = \"\", label = \"\", id = 0, icon = \"\", description = \"\") {\n    this.name = name;\n    this.label = label;\n    this.id = id;\n    this.icon = icon;\n    this.description = description;\n    this.order_priority = 0;\n  }\n  /**\n   * Handler to the callback on click.\n   * Method to be Overridden in child\n   *\n   * @param {any} params\n   * @memberof SpinalDrive_App\n   */\n  action() {}\n\n  log(model, username, actiontype) {\n    let datestr = Date.now();\n    let tab = {\n      date: datestr,\n      name: username,\n      action: actiontype\n    };\n    SpinalDrive_App._log(model, tab);\n  }\n\n  /**\n   * Method called onclick will call this.action inside\n   *\n   * @param {any} params\n   * @memberof SpinalDrive_App\n   */\n  launch_action(params) {\n    if (params.file) {\n      let authService = params.scope.injector.get(\"authService\");\n      let username = authService.get_user().username;\n      var actiontype = params.item.name;\n      this.log(\n        window.FileSystem._objects[params.file._server_id],\n        username,\n        actiontype\n      );\n    }\n    this.action(params);\n  }\n\n  /**\n   * method to know if the app is needed to be shown.\n   * @param {Object} d object representing selection\n   * @returns {boolean} return true if need to be shown;\n   * @memberof SpinalDrive_App\n   */\n  is_shown() {\n    return true;\n  }\n}\n\nSpinalDrive_App.ptrRdy_defer = (ptr, promise, isnew = false) => {\n  if (!ptr.data.value || window.FileSystem._tmp_objects[ptr.data.value]) {\n    setTimeout(() => {\n      SpinalDrive_App.ptrRdy_defer(ptr, promise, true);\n    }, 200);\n    return;\n  }\n  if (window.FileSystem._objects[ptr.data.value]) {\n    promise({\n      model: window.FileSystem._objects[ptr.data.value],\n      firstTime: isnew\n    });\n  } else {\n    ptr.load(m => {\n      promise({\n        model: m,\n        firstTime: true\n      });\n    });\n  }\n};\n\nSpinalDrive_App.waitPtrRdy = ptr => {\n  return new Promise(resolve => {\n    SpinalDrive_App.ptrRdy_defer(ptr, resolve);\n  });\n};\n\nSpinalDrive_App._getOrCreate_log = file => {\n  return new Promise((resolve, reject) => {\n    if (file && file._info) {\n      if (!file._info.log) {\n        let logs = new window.Lst();\n        file._info.add_attr({\n          log: new window.Ptr(logs)\n        });\n        resolve(logs);\n      } else {\n        SpinalDrive_App.waitPtrRdy(file._info.log).then(res => {\n          let logs = res.model;\n          if (logs) {\n            resolve(logs);\n          } else {\n            reject();\n          }\n        });\n      }\n    }\n  });\n};\n\nSpinalDrive_App._log = (file, tab) => {\n  SpinalDrive_App._getOrCreate_log(file).then(\n    logsModels => {\n      SpinalDrive_App._pushLog(logsModels, tab);\n    },\n    () => {\n      console.error(\n        \"error SpinalDrive_App._getOrCreate_log : model is not a File or doesn't have _info\"\n      );\n    }\n  );\n};\n\nSpinalDrive_App._pushLog = (logsModel, tab) => {\n  logsModel.push(tab);\n};\n\nmodule.exports = SpinalDrive_App;\n",
    "let SpinalDrive_App = require(\"./SpinalDrive_App\");\n\n/** Class representing a list of applications unique */\nclass SpinalDrive_App_list {\n  constructor() {\n    this._list = [];\n  }\n\n  is_valid_obj(obj) {\n    return (\n      typeof obj.name != \"undefined\" &&\n      typeof obj.label != \"undefined\" &&\n      typeof obj.id != \"undefined\" &&\n      typeof obj.icon != \"undefined\" &&\n      typeof obj.description != \"undefined\"\n    );\n    // && typeof obj.appGroup != 'undefined' &&\n    // typeof obj.extensions != 'undefined' && typeof obj.types != 'undefined'\n  }\n  /**\n   *\n   *\n   * @param {(SpinalDrive_App|any)} obj\n   * @memberof SpinalDrive_App_list\n   */\n  push(obj) {\n    if (obj instanceof SpinalDrive_App || this.is_valid_obj(obj)) {\n      for (var i = 0; i < this._list.length; i++) {\n        if (this._list[i].name === obj.name) {\n          this._list[i] = obj;\n          return;\n        }\n      }\n      this._list.push(obj);\n    } else\n      console.error(\n        \"Error trying to Push not a SpinalDrive_App Object or equivalent.\"\n      );\n  }\n  /**\n   *\n   *\n   * @param {string} name\n   * @returns {boolean} false if nothing to delete\n   * @memberof SpinalDrive_App_list\n   */\n  remove_by_name(name) {\n    if (typeof name != \"undefined\") {\n      for (var i = 0; i < this._list.length; i++) {\n        if (name === this._list[i].name) {\n          this._list.splice(i, 1);\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n  /**\n   *\n   *\n   * @param {number} id\n   * @returns {SpinalDrive_App}\n   * @memberof SpinalDrive_App_list\n   */\n  remove_by_id(id) {\n    if (typeof id != \"undefined\") {\n      for (var i = 0; i < this._list.length; i++) {\n        if (id === this._list[i].id) {\n          this._list.splice(i, 1);\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n  /**\n   *\n   *\n   * @param {number} idx\n   * @returns {SpinalDrive_App}\n   * @memberof SpinalDrive_App_list\n   */\n  get(idx) {\n    if (typeof idx === \"undefined\") return this._list[idx];\n    return this._list;\n  }\n  /**\n   *\n   *\n   * @returns {number}\n   * @memberof SpinalDrive_App_list\n   */\n  length() {\n    return this._list.length;\n  }\n  /**\n   *\n   *\n   * @param {string} name\n   * @returns {SpinalDrive_App} returns 0 on notfound.\n   * @memberof SpinalDrive_App_list\n   */\n  get_by_name(name) {\n    for (var i = 0; i < this._list.length; i++) {\n      if (name === this._list[i].name) {\n        return this._list[i];\n      }\n    }\n    return 0;\n  }\n}\n\nmodule.exports = SpinalDrive_App_list;\n",
    "var SpinalDrive_App_list = require(\"./SpinalDrive_App_list\");\n\n/** Class representing the SpinalDrive Environnement */\nclass SpinalDrive_Env {\n  /**\n   * Creates an instance of SpinalDrive_Env.\n   * @memberof SpinalDrive_Env\n   */\n  constructor() {\n    this.containerLst = {};\n    this.context_file_exp_app_icon = {\n      Directory: \"folder\",\n      Session: \"desktop_windows\",\n      default: \"insert_drive_file\"\n    };\n  }\n  /**\n   * add_navbar_application.\n   *\n   * @param {string} key key string of the layer: `FolderExplorer` or 'FileExplorer' or `Inspector` or `FileExplorerCurrDir`\n   * @param {SpinalDrive_App | any} app should be an SpinalDrive_App\n   * @memberof SpinalDrive_Env\n   */\n  add_applications(key, app) {\n    if (!this.containerLst[key])\n      this.containerLst[key] = new SpinalDrive_App_list();\n    return this.containerLst[key].push(app);\n  }\n\n  /**\n   * get_applications\n   *\n   * @param {string} key key string of the layer\n   * @param {object} d dbject send to is_shown defined by each layout\n   * @memberof SpinalDrive_Env\n   */\n  get_applications(key, d) {\n    if (!this.containerLst[key])\n      this.containerLst[key] = new SpinalDrive_App_list();\n    return this.containerLst[key]._list\n      .filter(app => {\n        return app.is_shown(d);\n      })\n      .sort(function(a, b) {\n        return a.order_priority < b.order_priority;\n      });\n  }\n}\nmodule.exports = SpinalDrive_Env;\n",
    "/**\n * Copyright 2015 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nmodule.exports = {};\n\nmodule.exports.SpinalDrive_App_list = require(\"./core/SpinalDrive_App_list\");\nmodule.exports.SpinalDrive_App = require(\"./core/SpinalDrive_App\");\nmodule.exports.SpinalDrive_Env = require(\"./core/SpinalDrive_Env\");\nvar spinalDrive_Env = new module.exports.SpinalDrive_Env();\nif (window) window.spinalDrive_Env = spinalDrive_Env;\n",
    "require(\"spinal-core-connectorjs\");\nconst spinalEnvDriveCore = require(\"spinal-env-drive-core\");\nconst angular = require(\"angular\");\n/**\n * SpinalDrive_App_FileExplorer_delete\n * @extends {SpinalDrive_App}\n */\nclass SpinalDrive_App_FileExplorer_delete extends spinalEnvDriveCore.SpinalDrive_App {\n  /**\n   * Creates an instance of SpinalDrive_App_FileExplorer_delete.\n   * @memberof SpinalDrive_App_FileExplorer_delete\n   */\n  constructor() {\n    super(\"DeleleFileExplorer\", \"Delete\", 1, \"delete\", \"Delete the file\");\n    this.order_priority = -1;\n    // super(\"DeleleFileExplorer\", \"Delete\", 1, \"delete\", \"Delete the file\",\n    // \"delete\", [\"all\"], \"all\");\n  }\n  /**\n   * method to handle the selection\n   *\n   * @param {any} element\n   * @memberof SpinalDrive_App_FileExplorer_delete\n   */\n  action(obj) {\n    let mdDialog = obj.scope.injector.get(\"$mdDialog\");\n    let content = \"Are you sure to delete the file / folder\";\n    if (obj && obj.file && obj.file.name) content += \" : \" + obj.file.name;\n    let newFolder_prompt = mdDialog\n      .confirm()\n      .title(\"Delete\")\n      .textContent(content)\n      .ariaLabel(\"Delete Directory file\")\n      .clickOutsideToClose(true)\n      .ok(\"Confirm\")\n      .cancel(\"Cancel\");\n\n    mdDialog.show(newFolder_prompt).then(\n      function() {\n        if (\n          !(\n            obj &&\n            obj.scope &&\n            obj.scope.curr_dir &&\n            obj.file &&\n            obj.file._server_id\n          )\n        ) {\n          return;\n        }\n        let f = window.FileSystem._objects[obj.file._server_id];\n        if (f) {\n          let m_parent = obj.scope.curr_dir;\n          for (var i = 0; i < m_parent.length; i++) {\n            if (\n              m_parent[i]._server_id == f._server_id &&\n              obj.file.name == m_parent[i].name.get()\n            ) {\n              m_parent.remove_ref(m_parent[i]);\n              break;\n            }\n          }\n        }\n      },\n      function() {}\n    );\n  }\n\n  is_shown(d) {\n    if (d && d.file && d.file._server_id) {\n      let file = window.FileSystem._objects[d.file._server_id];\n      if (file && file._info && file._info.model_type) {\n        if (\n          file._info.model_type.get() === \"Synchronized Directory\" ||\n          file._info.model_type.get() === \"HttpPath\"\n        ) {\n          return false;\n        }\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\nmodule.exports.SpinalDrive_App_FileExplorer_delete = SpinalDrive_App_FileExplorer_delete;\n\n/**\n * SpinalDrive_App_FolderExplorer_delete\n * @extends {SpinalDrive_App}\n */\nclass SpinalDrive_App_FolderExplorer_delete extends spinalEnvDriveCore.SpinalDrive_App {\n  /**\n   * Creates an instance of SpinalDrive_App_FolderExplorer_delete.\n   * @memberof SpinalDrive_App_FolderExplorer_delete\n   */\n  constructor() {\n    super(\n      \"DeleleFolderExplorer\",\n      \"Delete\",\n      0,\n      \"fa fa-trash text-danger\",\n      \"Delete the file\"\n    );\n    // super(\"DeleleFolderExplorer\", \"Delete\", 0, \"fa fa-trash text-danger\",\n    // \"Delete the file\", \"delete\", [\"all\"], \"all\");\n  }\n\n  is_shown(d) {\n    if (d.parent === \"#\") return false;\n    if (d && d.original && d.original.fileId) {\n      const file = window.FileSystem._objects[d.original.fileId];\n      if (file && file._info && file._info.model_type) {\n        if (\n          file._info.model_type.get() === \"Synchronized Directory\" ||\n          file._info.model_type.get() === \"HttpPath\"\n        ) {\n          return false;\n        }\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * method to handle the selection\n   *\n   * @param {any} element\n   * @memberof SpinalDrive_App_FolderExplorer_delete\n   */\n  action(obj) {\n    let mdDialog = obj.scope.injector.get(\"$mdDialog\");\n    const file = window.FileSystem._objects[obj.node.original.fileId];\n    if (file && file._info && file._info.visaValidation) {\n      mdDialog.show(\n        mdDialog\n          .alert()\n          .parent(angular.element(document.body))\n          .clickOutsideToClose(true)\n          .title(\"Sorry\")\n          .textContent(\n            \"Sorry this file has already been sent for validation !!!\"\n          )\n          .ariaLabel(\"Alert\")\n          .ok(\"OK\")\n          .targetEvent(obj.evt)\n      );\n      return;\n    }\n\n    // let spinalFileSystem = obj.scope.injector.get(\"spinalFileSystem\");\n    let content = \"Are you sure to delete the folder\";\n    if (obj && obj.node && obj.node.text) content += \" : \" + obj.node.text;\n    let newFolder_prompt = mdDialog\n      .confirm()\n      .title(\"Delete\")\n      .textContent(content)\n      .ariaLabel(\"Delete Directory file\")\n      .clickOutsideToClose(true)\n      .ok(\"Confirm\")\n      .cancel(\"Cancel\");\n\n    mdDialog.show(newFolder_prompt).then(\n      function() {\n        const parentDir =\n          window.FileSystem._objects[\n            obj.node.original.pDirId\n          ];\n        if (parentDir) {\n          parentDir.remove_ref(file);\n        }\n      },\n      function() {}\n    );\n  }\n}\nmodule.exports.SpinalDrive_App_FolderExplorer_delete = SpinalDrive_App_FolderExplorer_delete;\n\n/**\n * SpinalDrive_App_FileExplorer_currdir_delete\n * @extends {SpinalDrive_App}\n */\nclass SpinalDrive_App_FileExplorer_currdir_delete extends spinalEnvDriveCore.SpinalDrive_App {\n  /**\n   * Creates an instance of SpinalDrive_App_FileExplorer_currdir_delete.\n   * @memberof SpinalDrive_App_FileExplorer_currdir_delete\n   */\n  constructor() {\n    super(\n      \"DeleleFileExplorer_currdir\",\n      \"Delete Selected\",\n      1,\n      \"delete\",\n      \"Delete the selected file(s)\"\n    );\n    this.order_priority = -1;\n  }\n  /**\n   * method to handle the selection\n   *\n   * @param {any} element\n   * @memberof SpinalDrive_App_FileExplorer_currdir_delete\n   */\n  action(obj) {\n    let mdDialog = obj.scope.injector.get(\"$mdDialog\");\n    let content = \"Are you sure to delete the file(s) / folder(s)\";\n    let files = [];\n    let filesIgnore = [];\n    for (var i = 0; i < obj.scope.directory.length; i++) {\n      if (obj.scope.directory[i].selected === true) {\n        if (\n          obj.scope.directory[i].model_type !== \"HttpPath\" ||\n          obj.scope.directory[i].model_type !== \"Synchronized Directory\"\n        ) {\n          filesIgnore.push(obj.scope.directory[i]);\n        } else {\n          files.push(obj.scope.directory[i]);\n        }\n      }\n    }\n\n    if (files.length > 0) {\n      content += \" : \" + files.map(x => x.name).join(\", \");\n    }\n    if (filesIgnore.length > 0) {\n      content += \" \\n ignored: \" + filesIgnore.map(x => x.name).join(\", \");\n    }\n    let newFolder_prompt = mdDialog\n      .confirm()\n      .title(\"Delete\")\n      .textContent(content)\n      .ariaLabel(\"Delete Directory file\")\n      .clickOutsideToClose(true)\n      .ok(\"Confirm\")\n      .cancel(\"Cancel\");\n\n    mdDialog.show(newFolder_prompt).then(\n      function() {\n        let m_parent = obj.model;\n        for (var y = 0; y < files.length; y++) {\n          let f = window.FileSystem._objects[files[y]._server_id];\n          if (f) {\n            for (var i = 0; i < m_parent.length; i++) {\n              if (\n                m_parent[i]._server_id == f._server_id &&\n                files[y].name == m_parent[i].name.get()\n              ) {\n                m_parent.remove_ref(m_parent[i]);\n                break;\n              }\n            }\n          }\n        }\n      },\n      function() {}\n    );\n  }\n\n  is_shown(d) {\n    for (var i = 0; i < d.scope.directory.length; i++) {\n      if (d.scope.directory[i].selected === true) return true;\n    }\n    return false;\n  }\n}\nmodule.exports.SpinalDrive_App_FileExplorer_currdir_delete = SpinalDrive_App_FileExplorer_currdir_delete;\n",
    "const spinalEnvDriveCore = require(\"spinal-env-drive-core\");\nconst SpinalDrive_App = spinalEnvDriveCore.SpinalDrive_App;\n/**\n * SpinalDrive_App_FileExplorer_Download\n * @extends {SpinalDrive_App}\n */\nclass SpinalDrive_App_FileExplorer_Download extends SpinalDrive_App {\n  /**\n   * Creates an instance of SpinalDrive_App_FileExplorer_Download.\n   * @memberof SpinalDrive_App_FileExplorer_Download\n   */\n  constructor() {\n    super(\n      \"DownloadFileExplorer\",\n      \"Download...\",\n      15,\n      \"file_download\",\n      \"Download a File\"\n    );\n  }\n  /**\n   * method to handle the selection\n   *\n   * @param {any} element\n   * @memberof SpinalDrive_App_FileExplorer_Download\n   */\n  action(obj) {\n    let mdDialog = obj.scope.injector.get(\"$mdDialog\");\n    let f = window.FileSystem._objects[obj.file._server_id];\n    var confirm = mdDialog\n      .confirm()\n      .title(\"Do you want download \" + f.name.get() + \" ?\")\n      .ariaLabel(\"Download\")\n      .clickOutsideToClose(true)\n      .ok(\"Download!\")\n      .cancel(\"Cancel\");\n\n    mdDialog.show(confirm).then(\n      function() {\n        if (f._info.model_type.get() == \"Path\") {\n          // window.open(\"/sceen/_?u=\" + model._server_id, \"Download\");\n          var element = document.createElement(\"a\");\n          element.setAttribute(\"href\", \"/sceen/_?u=\" + f._ptr.data.value);\n          element.setAttribute(\"download\", f.name.get());\n          element.style.display = \"none\";\n          document.body.appendChild(element);\n          element.click();\n          document.body.removeChild(element);\n        }\n      },\n      function() {}\n    );\n  }\n  is_shown(d) {\n    if (d && d.file && d.file._server_id) {\n      let file = window.FileSystem._objects[d.file._server_id];\n      if (file && file._info && file._info.model_type) {\n        if (file._info.model_type.get() === \"Path\") {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n}\n\nmodule.exports.FileExplorerDownload = SpinalDrive_App_FileExplorer_Download;\n",
    "const spinalEnvDriveCore = require('spinal-env-drive-core');\nconst angular = require('angular');\n/**\n * SpinalDrive_App_Edit\n * @extends {SpinalDrive_App}\n */\nclass SpinalDrive_App_Edit extends spinalEnvDriveCore.SpinalDrive_App {}\n/**\n * DialogEditCtrl - controller to be added within a `$mdDialog.show` option parameter.\n *  e.g. {controller: [\"$scope\", \"$mdDialog\", \"model_server_id\", \"spinalModelDictionary\", \"mdDialog\", \"ngSpinalCore\",DialogEditCtrl], template: shareTemplate, ... , locals:\n * {model_server_id: obj,spinalModelDictionary: spinalModelDictionary, mdDialog: mdDialog, ngSpinalCore: ngSpinalCore}\n * }\n * @param {any} $scope automaticly given in the mdDialog.show\n * @param {angular} $mdDialog automaticly given in the mdDialog.show\n * @param {number} model_server_id resolved within the `local` object given to the $mdDialog.show(...)\n * @param {angularFactory} spinalModelDictionary same\n * @param {angularFactory} mdDialog same\n * @param {angularFactory} ngSpinalCore same\n */\nSpinalDrive_App_Edit.DialogEditCtrl = function(\n  $scope,\n  $mdDialog,\n  model_server_id,\n) {\n  let mod = window.FileSystem._objects[model_server_id];\n  $scope.editModel = mod;\n  $scope.modelData = mod.get();\n  $scope.editModelContruct = mod.constructor.name;\n  $scope.editForm = {};\n\n  $scope.cancelDialog = function() {\n    $mdDialog.hide();\n  };\n\n  $scope.submitDialog = function() {\n    mod.set($scope.editForm.modelData.$modelValue);\n    $mdDialog.hide();\n  };\n  $scope.isStr = m => {\n    return m instanceof window.Str;\n  };\n  $scope.isVal = m => {\n    return m instanceof window.Val;\n  };\n  $scope.isBool = m => {\n    return m instanceof window.Bool;\n  };\n};\n\nangular.module(\"app.spinal-panel\").run([\n  \"$templateCache\",\n  \"$http\",\n  function($templateCache, $http) {\n    let load_template = (uri, name) => {\n      $http.get(uri).then(\n        response => {\n          $templateCache.put(name, response.data);\n        },\n        () => {\n          console.log(\"Cannot load the file \" + uri);\n        }\n      );\n    };\n    let toload = [\n      {\n        uri:\n          \"../templates/spinal-env-drive-plugin-base/SpinalDrive_App_Edit_EditTemplate.html\",\n        name: \"SpinalDrive_App_Edit_EditTemplate.html\"\n      }\n    ];\n    for (var i = 0; i < toload.length; i++) {\n      load_template(toload[i].uri, toload[i].name);\n    }\n  }\n]);\n\n/**\n * SpinalDrive_App_Inspector_edit\n * @extends {SpinalDrive_App_Edit}\n */\nclass SpinalDrive_App_Inspector_edit extends SpinalDrive_App_Edit {\n  /**\n   * Creates an instance of SpinalDrive_App_Inspector_edit.\n   * @memberof SpinalDrive_App_Inspector_edit\n   */\n  constructor() {\n    super(\"EditInspector\", \"Edit...\", 3, \"edit\", \"Edit Atomic Models...\");\n    // super(\"EditInspector\", \"Edit...\", 3, \"edit\", \"Edit Atomic Models...\", \"edit\", [\"all\"], \"all\");\n  }\n  /**\n   * method to handle the selection\n   *\n   * @param {any} element\n   * @memberof SpinalDrive_App_Inspector_edit\n   */\n  action(obj) {\n    let spinalModelDictionary = obj.scope.injector.get(\"spinalModelDictionary\");\n    let mdDialog = obj.scope.injector.get(\"$mdDialog\");\n    let ngSpinalCore = obj.scope.injector.get(\"ngSpinalCore\");\n    let templateCache = obj.scope.injector.get(\"$templateCache\");\n    mdDialog.show({\n      ariaLabel: \"Edit\",\n      controller: [\n        \"$scope\",\n        \"$mdDialog\",\n        \"model_server_id\",\n        SpinalDrive_App_Edit.DialogEditCtrl\n      ],\n      template: templateCache.get(\"SpinalDrive_App_Edit_EditTemplate.html\"),\n      parent: angular.element(document.body),\n      clickOutsideToClose: true,\n      locals: {\n        model_server_id: obj.model_server_id,\n        spinalModelDictionary: spinalModelDictionary,\n        mdDialog: mdDialog,\n        ngSpinalCore: ngSpinalCore\n      }\n    });\n  }\n\n  /**\n   * method to know if the app is needed to be shown.\n   * if the method is not defined then the model is shown by default\n   * @param {Object} d node of the tree selectionned\n   * @returns {boolean}\n   * @memberof SpinalDrive_App_Inspector_edit\n   */\n  is_shown(d) {\n    if (d && d.data && d.data._server_id) {\n      let m = window.FileSystem._objects[d.data._server_id];\n      if (m) {\n        return m instanceof window.Val || m instanceof window.Bool || m instanceof window.Str;\n      }\n    }\n    return false;\n  }\n}\nmodule.exports.InspectorEdit = SpinalDrive_App_Inspector_edit;\n",
    "const spinalEnvDriveCore = require(\"spinal-env-drive-core\");\nconst SpinalDrive_App = spinalEnvDriveCore.SpinalDrive_App;\nconst Directory = window.spinalCore._def[\"Directory\"];\n/**\n * SpinalDrive_App_FileExplorer_currdir_newFolder\n * @extends {SpinalDrive_App}\n */\nclass SpinalDrive_App_FileExplorer_currdir_newFolder extends SpinalDrive_App {\n  /**\n   * Creates an instance of SpinalDrive_App_FileExplorer_currdir_newFolder.\n   * @memberof SpinalDrive_App_FileExplorer_currdir_newFolder\n   */\n  constructor() {\n    super(\n      \"NewFolderFileExplorerCurrDir\",\n      \"New Folder...\",\n      1,\n      \"create_new_folder\",\n      \"Create a new Folder\"\n    );\n  }\n  /**\n   * method to handle the selection\n   *\n   * @param {any} element\n   * @memberof SpinalDrive_App_FileExplorer_currdir_newFolder\n   */\n  action(obj) {\n    let mdDialog = obj.scope.injector.get(\"$mdDialog\");\n    let spinalFileSystem = obj.scope.injector.get(\"spinalFileSystem\");\n    var confirm = mdDialog\n      .prompt()\n      .title(\"New Folder\")\n      .placeholder(\"Untitled folder\")\n      .ariaLabel(\"New Folder\")\n      .initialValue(\"Untitled folder\")\n      .clickOutsideToClose(true)\n      .required(true)\n      .ok(\"Create!\")\n      .cancel(\"Cancel\");\n    obj.original = {\n      model: obj.model._server_id\n    };\n\n    mdDialog.show(confirm).then(\n      result => {\n        let regex = /^[a-z0-9 ._-]+(\\.[a-z0-9_-]+)?$/gim;\n        if (regex.test(result) === false) {\n          let mdToast = obj.scope.injector.get(\"$mdToast\");\n          mdToast.show(\n            mdToast\n              .simple()\n              .theme(\"error-toast\")\n              .textContent(`The name \"${result}\" is not a valid name.`)\n          );\n          return;\n        }\n        spinalFileSystem.newFolder(null, obj, result);\n        let username = obj.scope.injector.get(\"authService\").get_user()\n          .username;\n        this.log(\n          obj.model[obj.model.length - 1],\n          username,\n          obj.item.description\n        );\n      },\n      function() {}\n    );\n  }\n}\n\nmodule.exports.FileExplorerCurrDirNewFolder = SpinalDrive_App_FileExplorer_currdir_newFolder;\n\n/**\n * SpinalDrive_App_FolderExplorer_newFolder\n * @extends {SpinalDrive_App}\n */\nclass SpinalDrive_App_FolderExplorer_newFolder extends SpinalDrive_App {\n  /**\n   * Creates an instance of SpinalDrive_App_FolderExplorer_newFolder.\n   * @memberof SpinalDrive_App_FolderExplorer_newFolder\n   */\n  constructor() {\n    super(\n      \"NewFolderFolderExplorer\",\n      \"New Folder...\",\n      1,\n      \"fa fa-folder\",\n      \"Create a new Folder\"\n    );\n  }\n  /**\n   * method to handle the selection\n   *\n   * @param {any} element\n   * @memberof SpinalDrive_App_FolderExplorer_newFolder\n   */\n  action(obj) {\n    let mdDialog = obj.scope.injector.get(\"$mdDialog\");\n    let ngSpinalCore = obj.scope.injector.get(\"ngSpinalCore\");\n    var confirm = mdDialog\n      .prompt()\n      .title(\"New Folder\")\n      .placeholder(\"Untitled folder\")\n      .ariaLabel(\"New Folder\")\n      .clickOutsideToClose(true)\n      .initialValue(\"Untitled folder\")\n      .required(true)\n      .ok(\"Create!\")\n      .cancel(\"Cancel\");\n    mdDialog.show(confirm).then(\n      result => {\n        let regex = /^[a-z0-9 ._-]+(\\.[a-z0-9_-]+)?$/gim;\n        if (regex.test(result) === false) {\n          let mdToast = obj.scope.injector.get(\"$mdToast\");\n          mdToast.show(\n            mdToast\n              .simple()\n              .theme(\"error-toast\")\n              .textContent(`The name \"${result}\" is not a valid name.`)\n          );\n          return;\n        }\n\n        const file = window.FileSystem._objects[obj.node.original.fileId];\n        if (!file) return;\n\n        return ngSpinalCore.loadModelPtr(file).then(dir => {\n          if (dir) {\n            dir.force_add_file(result, new Directory(), {\n              model_type: \"Directory\"\n            });\n            let username = obj.scope.injector.get(\"authService\").get_user()\n              .username;\n            this.log(dir[dir.length - 1], username, this.description);\n          }\n        });\n      },\n      function() {}\n    );\n  }\n}\n\nmodule.exports.FolderExplorerNewFolder = SpinalDrive_App_FolderExplorer_newFolder;\n",
    "const spinalEnvDriveCore = require(\"spinal-env-drive-core\");\nconst SpinalDrive_App = spinalEnvDriveCore.SpinalDrive_App;\n\nconst spinalCore = require(\"spinal-core-connectorjs\");\nconst FileSystem = spinalCore._def['FileSystem'];\n\n/**\n * SpinalDrive_App_FileExplorer_rename\n * @extends {SpinalDrive_App}\n */\nclass SpinalDrive_App_FileExplorer_rename extends SpinalDrive_App {\n  /**\n   * Creates an instance of SpinalDrive_App_FileExplorer_rename.\n   * @memberof SpinalDrive_App_FileExplorer_rename\n   */\n  constructor() {\n    super(\"RenameFileExplorer\", \"Rename...\", 1, \"edit\", \"Rename a File\");\n  }\n  /**\n   * method to handle the selection\n   *\n   * @param {any} element\n   * @memberof SpinalDrive_App_FileExplorer_rename\n   */\n  action(obj) {\n    let mdDialog = obj.scope.injector.get(\"$mdDialog\");\n    let f = FileSystem._objects[obj.file._server_id];\n    var confirm = mdDialog\n      .prompt()\n      .title(\"Rename\")\n      .placeholder(\"File Name\")\n      .ariaLabel(\"Rename\")\n      .clickOutsideToClose(true)\n      .required(true)\n      .ok(\"Rename!\")\n      .cancel(\"Cancel\");\n    if (f && f.name && f.name.get()) {\n      confirm.initialValue(f.name.get());\n    }\n\n    mdDialog.show(confirm).then(\n      function(result) {\n        if (f.name.get() === result) return;\n        let regex = /^[a-z0-9 ._-]+(\\.[a-z0-9_-]+)?$/gim;\n        if (regex.test(result) === false) {\n          let mdToast = obj.scope.injector.get(\"$mdToast\");\n          mdToast.show(\n            mdToast\n              .simple()\n              .theme(\"error-toast\")\n              .textContent(`The name \"${result}\" is not a valid name.`)\n          );\n          return;\n        }\n        for (let i = 0; i < obj.scope.curr_dir.length; i++) {\n          if (obj.scope.curr_dir[i].name.get() === result) {\n            let mdToast = obj.scope.injector.get(\"$mdToast\");\n\n            mdToast.show(\n              mdToast\n                .simple()\n                .theme(\"error-toast\")\n                .textContent(\"Error rename: File with this name already exist.\")\n            );\n            // mdToast.showSimple();\n            return;\n          }\n        }\n        f.name.set(result);\n        // .newFolder(null, obj, result);\n      },\n      function() {}\n    );\n  }\n}\n\nmodule.exports.FileExplorerRename = SpinalDrive_App_FileExplorer_rename;\n\n// /**\n//  * SpinalDrive_App_FolderExplorer_rename\n//  * @extends {SpinalDrive_App}\n//  */\n// class SpinalDrive_App_FolderExplorer_rename extends SpinalDrive_App {\n\n//   /**\n//    * Creates an instance of SpinalDrive_App_FolderExplorer_rename.\n//    * @memberof SpinalDrive_App_FolderExplorer_rename\n//    */\n//   constructor() {\n//     super(\"RenameFolderExplorer\", \"Rename...\", 1, \"fa fa-pencil\", \"Rename a File\");\n//   }\n//   /**\n//    * method to handle the selection\n//    *\n//    * @param {any} element\n//    * @memberof SpinalDrive_App_FolderExplorer_rename\n//    */\n//   action(obj) {\n//     let mdDialog = obj.scope.injector.get('$mdDialog');\n//     let  = obj.scope.injector.get('');\n//     console.log(obj);\n//     let f = FileSystem._objects[obj.model_server_id];\n//     var confirm = mdDialog.prompt()\n//       .title('Rename')\n//       .placeholder('File Name')\n//       .ariaLabel('Rename')\n//       .clickOutsideToClose(true)\n//       .required(true)\n//       .ok('Rename!')\n//       .cancel('Cancel');\n//     console.log(f);\n//     if (f && f.name && f.name.get()) {\n//       confirm.initialValue(f.name.get());\n//     }\n\n//     mdDialog.show(confirm).then(function (result) {\n//       f.name.set(result);\n//     }, function () {});\n//   }\n// }\n\n// module.exports.FolderExplorerRename = SpinalDrive_App_FolderExplorer_rename;\n",
    "const spinalCore = require(\"spinal-core-connectorjs\");\nconst spinalEnvDriveCore = require(\"spinal-env-drive-core\");\nconst SpinalDrive_App = spinalEnvDriveCore.SpinalDrive_App;\nconst angular = require(\"angular\");\n\nconst FileSystem = spinalCore._def[\"FileSystem\"];\nconst Ptr = spinalCore._def[\"Ptr\"];\n\n/**\n * SpinalDrive_App_share\n * @extends {SpinalDrive_App}\n */\nclass SpinalDrive_App_share extends SpinalDrive_App {}\n/**\n * DialogShareCtrl - controller to be added within a `$mdDialog.show` option parameter.\n *  e.g. {controller: [\"$scope\", \"$mdDialog\", \"model_server_id\", \"spinalModelDictionary\", \"mdDialog\", \"ngSpinalCore\",DialogShareCtrl], template: shareTemplate, ... , locals:\n * {model_server_id: obj,spinalModelDictionary: spinalModelDictionary, mdDialog: mdDialog, ngSpinalCore: ngSpinalCore}\n * }\n * @param {any} $scope automaticly given in the mdDialog.show\n * @param {angular} $mdDialog automaticly given in the mdDialog.show\n * @param {number} model_server_id resolved within the `local` object given to the $mdDialog.show(...)\n * @param {angularFactory} spinalModelDictionary same\n * @param {angularFactory} mdDialog same\n * @param {angularFactory} ngSpinalCore same\n */\nSpinalDrive_App_share.DialogShareCtrl = function(\n  $scope,\n  $mdDialog,\n  model_server_id,\n  spinalModelDictionary,\n  mdDialog,\n  ngSpinalCore\n) {\n  spinalModelDictionary.init().then(function() {\n    $scope.users = spinalModelDictionary.users.get();\n    $scope.rightRead = false;\n    $scope.rightWrite = false;\n    $scope.rightShare = false;\n    $scope.users.forEach(element => {\n      element.share_selected = false;\n      element._lowername = element.name.toLowerCase();\n    });\n    let mod = FileSystem._objects[model_server_id];\n    let _data = 0;\n    if (mod instanceof File) _data = mod._ptr.data.value;\n    else if (mod instanceof Ptr) _data = mod.data.value;\n    else _data = mod._server_id;\n    ngSpinalCore.load_right(_data).then(\n      res => {\n        create_rightList(res);\n      },\n      () => {\n        console.error(\n          \"load_right: couldn't load the right of the model \" + model_server_id\n        );\n      }\n    );\n  });\n\n  function create_right_col(flag, flagType) {\n    if (flag & flagType) return \"Yes\";\n    return \"No\";\n  }\n\n  function create_rightList(model) {\n    $scope.selectedModelShared_to_user = [];\n    for (var i = 0; i < model.length; i++) {\n      let ur = model[i];\n      $scope.selectedModelShared_to_user.push({\n        id: ur.user.id.get(),\n        name: ur.user.name.get(),\n        rd: create_right_col(ur.flag.get(), spinalCore.right_flag.RD),\n        wr: create_right_col(ur.flag.get(), spinalCore.right_flag.WR),\n        ad: create_right_col(ur.flag.get(), spinalCore.right_flag.AD)\n      });\n    }\n  }\n\n  /**\n   * Return the proper object when the append is called.\n   */\n  $scope.transformChip = function(chip) {\n    // If it is an object, it's already a known chip\n    if (angular.isObject(chip)) {\n      return chip;\n    }\n    // Otherwise, create a new one\n    return {\n      name: chip,\n      type: \"new\"\n    };\n  };\n  $scope.error_msgs = [];\n  $scope.chip_users = [];\n  $scope.selectedItem = null;\n  $scope.searchText = null;\n  function createFilterFor(query) {\n    var lowercaseQuery = query.toLowerCase();\n\n    return function filterFn(user) {\n      return (\n        (user._lowername.indexOf(lowercaseQuery) === 0 ||\n          user.id.toString().indexOf(lowercaseQuery) === 0) &&\n        $scope.chip_users.some(c => {\n          return c.id === user.id;\n        }) === false\n      );\n    };\n  }\n\n  $scope.querySearch = query => {\n    var results = query\n      ? $scope.users.filter(createFilterFor(query))\n      : $scope.users.filter(user => {\n        return (\n          $scope.chip_users.some(c => {\n            return c.id === user.id;\n          }) === false\n        );\n      });\n    return results;\n  };\n  $scope.cancelDialog = function() {\n    $mdDialog.hide();\n  };\n\n  $scope.submitDialog = function() {\n    let flag = 0;\n    $scope.error_msgs = [];\n    if ($scope.rightRead == true) flag |= spinalCore.right_flag.RD;\n    if ($scope.rightWrite == true) flag |= spinalCore.right_flag.WR;\n    if ($scope.rightShare == true) flag |= spinalCore.right_flag.AD;\n\n    if ($scope.chip_users.length == 0) {\n      $scope.error_msgs.push(\"Add some user(s) to share.\");\n    }\n    if (flag == 0) {\n      $scope.error_msgs.push(\"Please select access rights level.\");\n    }\n    if ($scope.error_msgs.length != 0) {\n      return;\n    }\n\n    let data = FileSystem._objects[model_server_id];\n    let file_name = \"\";\n    if (data.name) file_name = data.name.get();\n    else file_name = data.constructor.name + \"_\" + data._server_id;\n    for (var i = 0; i < $scope.chip_users.length; i++) {\n      ngSpinalCore.share_model(\n        data,\n        file_name,\n        flag,\n        $scope.chip_users[i].name\n      );\n    }\n    $mdDialog.hide();\n  };\n};\n\nangular.module(\"app.spinal-panel\").run([\n  \"$templateCache\",\n  \"$http\",\n  function($templateCache, $http) {\n    let load_template = (uri, name) => {\n      $http.get(uri).then(\n        response => {\n          $templateCache.put(name, response.data);\n        },\n        () => {\n          console.log(\"Cannot load the file \" + uri);\n        }\n      );\n    };\n    let toload = [\n      {\n        uri:\n          \"../templates/spinal-env-drive-plugin-base/Spinal_App_ShareTemplate.html\",\n        name: \"Spinal_App_ShareTemplate.html\"\n      }\n    ];\n    for (var i = 0; i < toload.length; i++) {\n      load_template(toload[i].uri, toload[i].name);\n    }\n  }\n]);\n\n/**\n * SpinalDrive_App_FileExplorer_share\n * @extends {SpinalDrive_App_share}\n */\nclass SpinalDrive_App_FileExplorer_share extends SpinalDrive_App_share {\n  /**\n   * Creates an instance of SpinalDrive_App_FileExplorer_share.\n   * @memberof SpinalDrive_App_FileExplorer_share\n   */\n  constructor() {\n    super(\n      \"ShareFileExplorer\",\n      \"Share...\",\n      2,\n      \"share\",\n      \"Share Models with other Users\"\n    );\n    // super(\"ShareFileExplorer\", \"Share...\", 2, \"share\", \"Share Models with other Users\", \"share\", [\"all\"], \"all\");\n  }\n  /**\n   * method to handle the selection\n   *\n   * @param {any} element\n   * @memberof SpinalDrive_App_FileExplorer_share\n   */\n  action(obj) {\n    console.log(obj);\n    let templateCache = obj.scope.injector.get(\"$templateCache\");\n    let spinalModelDictionary = obj.scope.injector.get(\"spinalModelDictionary\");\n    let mdDialog = obj.scope.injector.get(\"$mdDialog\");\n    let ngSpinalCore = obj.scope.injector.get(\"ngSpinalCore\");\n    mdDialog.show({\n      controller: [\n        \"$scope\",\n        \"$mdDialog\",\n        \"model_server_id\",\n        \"spinalModelDictionary\",\n        \"mdDialog\",\n        \"ngSpinalCore\",\n        SpinalDrive_App_share.DialogShareCtrl\n      ],\n      template: templateCache.get(\"Spinal_App_ShareTemplate.html\"),\n      parent: angular.element(document.body),\n      targetEvent: obj.evt,\n      clickOutsideToClose: true,\n      locals: {\n        model_server_id: obj.file._server_id,\n        spinalModelDictionary: spinalModelDictionary,\n        mdDialog: mdDialog,\n        ngSpinalCore: ngSpinalCore\n      }\n    });\n  }\n}\n\nmodule.exports.FileExplorerShare = SpinalDrive_App_FileExplorer_share;\n\n/**\n * SpinalDrive_App_FolderExplorer_share\n * @extends {SpinalDrive_App_share}\n */\nclass SpinalDrive_App_FolderExplorer_share extends SpinalDrive_App_share {\n  /**\n   * Creates an instance of SpinalDrive_App_FolderExplorer_share.\n   * @memberof SpinalDrive_App_FolderExplorer_share\n   */\n  constructor() {\n    super(\n      \"ShareFolderExplorer\",\n      \"Share...\",\n      3,\n      \"fa fa-share-alt\",\n      \"Share Models with other Users\"\n    );\n    // super(\"ShareFolderExplorer\", \"Share...\", 3, \"fa fa-share-alt\", \"Share Models with other Users\", \"share\", [\"all\"], \"all\");\n  }\n  /**\n   * method to handle the selection\n   *\n   * @param {any} element\n   * @memberof SpinalDrive_App_FolderExplorer_share\n   */\n  action(obj) {\n    let templateCache = obj.scope.injector.get(\"$templateCache\");\n    let spinalModelDictionary = obj.scope.injector.get(\"spinalModelDictionary\");\n    let mdDialog = obj.scope.injector.get(\"$mdDialog\");\n    let ngSpinalCore = obj.scope.injector.get(\"ngSpinalCore\");\n    // let spinalFileSystem = obj.scope.injector.get(\"spinalFileSystem\");\n\n    // let node = obj.node;\n    // let n_par = spinalFileSystem.folderExplorer_dir[node.original.parent];\n    // if (!n_par) {\n    //   console.error(\"Error : Can't share your home / root\");\n    //   return;\n    // }\n    // let n_parent = FileSystem._objects[n_par.model];\n    // if (!n_parent) {\n    //   console.error(\"Error : Can't share your home / root\");\n    //   return;\n    // }\n    // let m_node;\n    // for (var i = 0; i < n_parent.length; i++) {\n    //   if (n_parent[i]._ptr.data.value == node.original.model) {\n    //     m_node = n_parent[i];\n    //     break;\n    //   }\n    // }\n    mdDialog.show({\n      controller: [\n        \"$scope\",\n        \"$mdDialog\",\n        \"model_server_id\",\n        \"spinalModelDictionary\",\n        \"mdDialog\",\n        \"ngSpinalCore\",\n        SpinalDrive_App_share.DialogShareCtrl\n      ],\n      template: templateCache.get(\"Spinal_App_ShareTemplate.html\"),\n      parent: angular.element(document.body),\n      clickOutsideToClose: true,\n      locals: {\n        model_server_id: Number(obj.node.original.fileId),\n        spinalModelDictionary: spinalModelDictionary,\n        mdDialog: mdDialog,\n        ngSpinalCore: ngSpinalCore\n      }\n    });\n  }\n  is_shown(d) {\n    if (d.parent === \"#\") return false;\n    return true;\n  }\n}\nmodule.exports.FolderExplorerShare = SpinalDrive_App_FolderExplorer_share;\n\n/**\n * SpinalDrive_App_Inspector_share\n * @extends {SpinalDrive_App_share}\n */\nclass SpinalDrive_App_Inspector_share extends SpinalDrive_App_share {\n  /**\n   * Creates an instance of SpinalDrive_App_Inspector_share.\n   * @memberof SpinalDrive_App_Inspector_share\n   */\n  constructor() {\n    super(\n      \"ShareInspector\",\n      \"Share...\",\n      3,\n      \"share\",\n      \"Share Models with other Users\"\n    );\n    // super(\"ShareInspector\", \"Share...\", 3, \"share\", \"Share Models with other Users\", \"share\", [\"all\"], \"all\");\n  }\n  /**\n   * method to handle the selection\n   *\n   * @param {any} element\n   * @memberof SpinalDrive_App_Inspector_share\n   */\n  action(obj) {\n    let templateCache = obj.scope.injector.get(\"$templateCache\");\n    let spinalModelDictionary = obj.scope.injector.get(\"spinalModelDictionary\");\n    let mdDialog = obj.scope.injector.get(\"$mdDialog\");\n    let ngSpinalCore = obj.scope.injector.get(\"ngSpinalCore\");\n    mdDialog.show({\n      controller: [\n        \"$scope\",\n        \"$mdDialog\",\n        \"model_server_id\",\n        \"spinalModelDictionary\",\n        \"mdDialog\",\n        \"ngSpinalCore\",\n        SpinalDrive_App_share.DialogShareCtrl\n      ],\n      template: templateCache.get(\"Spinal_App_ShareTemplate.html\"),\n      parent: angular.element(document.body),\n      clickOutsideToClose: true,\n      locals: {\n        model_server_id: obj.model_server_id,\n        spinalModelDictionary: spinalModelDictionary,\n        mdDialog: mdDialog,\n        ngSpinalCore: ngSpinalCore\n      }\n    });\n  }\n\n  /**\n   * method to know if the app is needed to be shown.\n   * if the method is not defined then the model is shown by default\n   * @param {Object} d node of the tree selectionned\n   * @returns {boolean}\n   * @memberof SpinalDrive_App_Inspector_share\n   */\n  is_shown() {\n    return true;\n  }\n}\nmodule.exports.InspectorShare = SpinalDrive_App_Inspector_share;\n",
    "/**\n * Copyright 2015 SpinalCom - www.spinalcom.com\n *\n * This file is part of SpinalCore.\n *\n * Please read all of the following terms and conditions\n * of the Free Software license Agreement (\"Agreement\")\n * carefully.\n *\n * This Agreement is a legally binding contract between\n * the Licensee (as defined below) and SpinalCom that\n * sets forth the terms and conditions that govern your\n * use of the Program. By installing and/or using the\n * Program, you agree to abide by all the terms and\n * conditions stated or referenced herein.\n *\n * If you do not agree to abide by these terms and\n * conditions, do not demonstrate your acceptance and do\n * not install or use the Program.\n * You should have received a copy of the license along\n * with this file. If not, see\n * <http://resources.spinalcom.com/licenses.pdf>.\n */\n\nmodule.extends = {};\nrequire(\"spinal-env-drive-core\");\nconst spinalDrive_Env = window.spinalDrive_Env;\n\nfunction concat_lib(lib) {\n  for (var key in lib) {\n    module.exports[key] = lib[key];\n  }\n}\nconcat_lib(require(\"./base/SpinalDrive_App_delete\"));\nconcat_lib(require(\"./base/SpinalDrive_App_edit\"));\nconcat_lib(require(\"./base/SpinalDrive_App_newFolder\"));\nconcat_lib(require(\"./base/SpinalDrive_App_renameFile\"));\nconcat_lib(require(\"./base/SpinalDrive_App_share\"));\nconcat_lib(require(\"./base/SpinalDrive_App_download\"));\n\nspinalDrive_Env.add_applications(\n  \"FileExplorer\",\n  new module.exports.SpinalDrive_App_FileExplorer_delete()\n);\nspinalDrive_Env.add_applications(\n  \"FileExplorerCurrDir\",\n  new module.exports.SpinalDrive_App_FileExplorer_currdir_delete()\n);\nspinalDrive_Env.add_applications(\n  \"FolderExplorer\",\n  new module.exports.SpinalDrive_App_FolderExplorer_delete()\n);\nspinalDrive_Env.add_applications(\n  \"Inspector\",\n  new module.exports.InspectorEdit()\n);\nspinalDrive_Env.add_applications(\n  \"FolderExplorer\",\n  new module.exports.FolderExplorerNewFolder()\n);\nspinalDrive_Env.add_applications(\n  \"FileExplorerCurrDir\",\n  new module.exports.FileExplorerCurrDirNewFolder()\n);\nspinalDrive_Env.add_applications(\n  \"FileExplorer\",\n  new module.exports.FileExplorerRename()\n);\nspinalDrive_Env.add_applications(\n  \"FileExplorer\",\n  new module.exports.FileExplorerShare()\n);\nspinalDrive_Env.add_applications(\n  \"FolderExplorer\",\n  new module.exports.FolderExplorerShare()\n);\nspinalDrive_Env.add_applications(\n  \"Inspector\",\n  new module.exports.InspectorShare()\n);\nspinalDrive_Env.add_applications(\n  \"FileExplorer\",\n  new module.exports.FileExplorerDownload()\n);\n"
  ]
}